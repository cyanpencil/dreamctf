from Crypto.Util.number import getPrime, GCD, bytes_to_long

p = getPrime(1024)
q = getPrime(1024)
n = p * q
phi = (p - 1) * (q - 1) // GCD(p - 1, q - 1)

# Hey, look, twin primes!
e1 = 0x10001
e2 = 0x10003

with open("flag.txt", "rb") as f:
    flag = f.read()
    assert len(flag) == 35
    flag = bytes_to_long(flag)

c1 = pow(flag, e1, n)
c2 = pow(e1 * flag, e2, n)

print(f"{hex(n) = }")
print(f"{hex(c1) = }")
print(f"{hex(c2) = }")

# This printed:
###
# hex(n) = '0xa30b1a9b277c8aa1d22642635d8fe06709f2befa9f705f566894d6643a71f608a3ab4799afc672eeb8feba8ee85f8918ffdc47d73ac7a6c850aff03d3df15df720750fce43e39fd284a67e8cfa9f279ea320fcfb8cbe557c9dc5eb83ba4fa9c44439224695e05d49d43837d57c91f2e52c4fbb5ccc1006e79733bb70be891e33890297e90cfb7d6119936a4978b7484471d7e6aeaa4ccb1450d028e774a87b8775cddd4460acc0d263e0d5fd94d83e13181227be504506132001c9affd016a428eb8034c98edd798bd13281aa1a957b0176146a4deb0eade4f1f87f44ea62f20027fa9548789298e9bc13f3269b251daf25b5fd5fd9b07f6dd6cfb298bafb397'
# hex(c1) = '0x3150902004b8929201cea5ecf9e81131fa434cd05f5d8561ad4289bd3679232c07b382bc0a02bda6a8dda0042d5bd7de85d50e7d0d399246cbe9a6f076874c7ffff72195e190e8298a65b554b1498b5427270cc46852c4a8a8d4e6924f00e371aa32f58d401538df2f1a2da4034c00841623828fa5f361e4346564125a4b103d68817a878b5bb29b8ba229fefbfb4de2fadd98845e6c463409e1a9ebc90bd0751f62509ef17655429fd9aecf8e1651ff0b11dfb7bd1a4953dd67cdcce25079dbad96ed59d29116fc09bdda73f8a36731000a7fa5753b143507c3fbb7bfb17ca93dfad6b19d327549b77112e56c34dfb4db4be511bb99157a3876016c6f0cf72b'
# hex(c2) = '0x4b44816dc060c16c4fa365dc4c849af33fa58ee6292a7f4703e1ebadb1351850e60626149ff8472d8575faa00c39c2cee1156d3e2c097c6f5f867255d7cc9e84f57c234fc003af87910e7d5cf7311c7e0b651f5a5a79bf8fcb04ff53cd810a34097cab34c40f60d70ce9d5fdc882e38996b860f32e3be828f395dd53065df324d2f9575cd5387a40c53345a27fd1163012bd9302fa26eed244ba42ecb66bc108c24a2c78985e59883375295a7689acf1ba05d76b85b207a74e5cd5f569e8a82c005cc6339d9550b850c80fa26bfccebb4cdbf189dd5534394ee4eac90b71b3439c051b9936d47f057634350f7634e55b4abc09252985ee3a95ec81e64239eb9a'
###
